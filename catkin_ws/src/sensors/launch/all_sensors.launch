<!-- Code starts here -->



<launch>
    <arg name="frame_id1" default="vectornav"/>
    <node pkg="vectornav" type="vnpub" name="vectornav" output="screen" >
        <param name="frame_id1" value="$(arg frame_id1)"/>
     <rosparam command="load" file="$(find vectornav)/params/vn200.yaml" />
    </node>
    
    <arg name="serial_no"           default=""/>
      <arg name="usb_port_id"         default=""/>
      <arg name="device_type"         default="t265"/>
      <arg name="json_file_path"      default=""/>
      <arg name="camera"              default="camera"/>
      <arg name="tf_prefix"           default="$(arg camera)"/>

      <arg name="fisheye_width"       default="848"/>
      <arg name="fisheye_height"      default="800"/>
      <arg name="enable_fisheye1"     default="true"/>
      <arg name="enable_fisheye2"     default="true"/>

      <arg name="fisheye_fps"         default="30"/>

      <arg name="gyro_fps"            default="-1"/>
      <arg name="accel_fps"           default="-1"/>
      <arg name="enable_gyro"         default="true"/>
      <arg name="enable_accel"        default="true"/>
      <arg name="enable_pose"         default="true"/>

      <arg name="enable_sync"           default="false"/>

      <arg name="linear_accel_cov"      default="0.01"/>
      <arg name="initial_reset"         default="false"/>
      <arg name="reconnect_timeout"     default="6.0"/>
      <arg name="unite_imu_method"      default=""/>

      <arg name="publish_odom_tf"     default="true"/>
 
      <group ns="$(arg camera)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
          <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
          <arg name="serial_no"                value="$(arg serial_no)"/>
          <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
          <arg name="device_type"              value="$(arg device_type)"/>
          <arg name="json_file_path"           value="$(arg json_file_path)"/>

          <arg name="enable_sync"              value="$(arg enable_sync)"/>

          <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
          <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
          <arg name="enable_fisheye1"          value="$(arg enable_fisheye1)"/>
          <arg name="enable_fisheye2"          value="$(arg enable_fisheye2)"/>

          <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
          <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
          <arg name="accel_fps"                value="$(arg accel_fps)"/>
          <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
          <arg name="enable_accel"             value="$(arg enable_accel)"/>
          <arg name="enable_pose"              value="$(arg enable_pose)"/>

          <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
          <arg name="initial_reset"            value="$(arg initial_reset)"/>
          <arg name="reconnect_timeout"        value="$(arg reconnect_timeout)"/>
          <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>

          <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
        </include>
      </group>
    
	<arg name="ft_sensor_a_name"                 default="ft_sensor0"/>
	<node name="bus0" pkg="rokubimini_serial" type="rokubimini_serial_bus_manager_node"  output="screen" required="true">
    	<param name="num_spinners"                              type="int"      value="1"/>
    	<param name="time_step"                                 type="double"   value="0.01"/>
    	<param name="port"  type="string"   value="/dev/ttyUSB5"/>
    	<param name="rokubiminis/$(arg ft_sensor_a_name)/name" type="string" value="$(arg ft_sensor_a_name)"/>
    	<param name="rokubiminis/$(arg ft_sensor_a_name)/product_name" type="string" value="BFT-LAXS-SER-M8"/>
    	<rosparam ns="rokubiminis/$(arg ft_sensor_a_name)" command="load" file="$(find rokubimini)/config/rokubimini_sensor.yaml" />
  	</node>

   	<arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
	  <arg name="device_ip" default="" />
	  <arg name="frame_id" default="velodyne" />
	  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
	  <arg name="max_range" default="130.0" />
	  <arg name="min_range" default="0.4" />
	  <arg name="pcap" default="" />
	  <arg name="port" default="2368" />
	  <arg name="read_fast" default="false" />
	  <arg name="read_once" default="false" />
	  <arg name="repeat_delay" default="0.0" />
	  <arg name="rpm" default="600.0" />
	  <arg name="gps_time" default="false" />
	  <arg name="pcap_time" default="false" />
	  <arg name="cut_angle" default="-0.01" />
	  <arg name="timestamp_first_packet" default="false" />
	  <arg name="laserscan_ring" default="-1" />
	  <arg name="laserscan_resolution" default="0.007" />
	  <arg name="organize_cloud" default="false" />

	  <!-- start nodelet manager and driver nodelets -->
	  <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
	    <arg name="device_ip" value="$(arg device_ip)"/>
	    <arg name="frame_id" value="$(arg frame_id)"/>
	    <arg name="manager" value="$(arg manager)" />
	    <arg name="model" value="VLP16"/>
	    <arg name="pcap" value="$(arg pcap)"/>
	    <arg name="port" value="$(arg port)"/>
	    <arg name="read_fast" value="$(arg read_fast)"/>
	    <arg name="read_once" value="$(arg read_once)"/>
	    <arg name="repeat_delay" value="$(arg repeat_delay)"/>
	    <arg name="rpm" value="$(arg rpm)"/>
	    <arg name="gps_time" value="$(arg gps_time)"/>
	    <arg name="pcap_time" value="$(arg pcap_time)"/>
	    <arg name="cut_angle" value="$(arg cut_angle)"/>
	    <arg name="timestamp_first_packet" value="$(arg timestamp_first_packet)"/>
	  </include>

	  <!-- start transform nodelet -->
	  <include file="$(find velodyne_pointcloud)/launch/transform_nodelet.launch">
	    <arg name="model" value="VLP16"/>
	    <arg name="calibration" value="$(arg calibration)"/>
	    <arg name="manager" value="$(arg manager)" />
	    <arg name="fixed_frame" value="" />
	    <arg name="target_frame" value="" />
	    <arg name="max_range" value="$(arg max_range)"/>
	    <arg name="min_range" value="$(arg min_range)"/>
	    <arg name="organize_cloud" value="$(arg organize_cloud)"/>
	  </include>

	  <!-- start laserscan nodelet -->
	  <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
	    <arg name="manager" value="$(arg manager)" />
	    <arg name="ring" value="$(arg laserscan_ring)"/>
	    <arg name="resolution" value="$(arg laserscan_resolution)"/>
	  </include>
    
</launch>
    

